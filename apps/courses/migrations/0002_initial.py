# Generated by Django 4.1.13 on 2024-03-07 08:12

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("courses", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("holder", "0001_initial"),
        ("taggit", "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx"),
    ]

    operations = [
        migrations.AddField(
            model_name="useranswer",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="answers", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="useranswer",
            name="video",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="holder.videoholder",
            ),
        ),
        migrations.AddField(
            model_name="review",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="reviews", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="review",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="reviews", to="courses.course"
            ),
        ),
        migrations.AddField(
            model_name="review",
            name="images",
            field=models.ManyToManyField(blank=True, related_name="+", to="holder.imageholder"),
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="products", to="courses.category"
            ),
        ),
        migrations.AddField(
            model_name="lessontaskanswer",
            name="task",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="possible_answers", to="courses.lessontask"
            ),
        ),
        migrations.AddField(
            model_name="lessontask",
            name="images",
            field=models.ManyToManyField(blank=True, related_name="+", to="holder.imageholder"),
        ),
        migrations.AddField(
            model_name="lessontask",
            name="lesson",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="tasks", to="courses.lesson"
            ),
        ),
        migrations.AddField(
            model_name="lessontask",
            name="links",
            field=models.ManyToManyField(blank=True, related_name="+", to="holder.linkholder"),
        ),
        migrations.AddField(
            model_name="lessontask",
            name="videos",
            field=models.ManyToManyField(blank=True, related_name="+", to="holder.videoholder"),
        ),
        migrations.AddField(
            model_name="lesson",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="lessons", to="courses.course"
            ),
        ),
        migrations.AddField(
            model_name="lesson",
            name="images",
            field=models.ManyToManyField(blank=True, related_name="+", to="holder.imageholder"),
        ),
        migrations.AddField(
            model_name="lesson",
            name="links",
            field=models.ManyToManyField(blank=True, related_name="+", to="holder.linkholder"),
        ),
        migrations.AddField(
            model_name="lesson",
            name="videos",
            field=models.ManyToManyField(blank=True, related_name="+", to="holder.videoholder"),
        ),
        migrations.AddField(
            model_name="course",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="courses", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="favourites",
            field=models.ManyToManyField(blank=True, related_name="favourites", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="course",
            name="poster",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="holder.imageholder",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="courses", to="courses.product"
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="tags",
            field=taggit.managers.TaggableManager(
                blank=True,
                help_text="A comma-separated list of tags.",
                through="taggit.TaggedItem",
                to="taggit.Tag",
                verbose_name="Tags",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="author",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="comments", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="images",
            field=models.ManyToManyField(blank=True, related_name="+", to="holder.imageholder"),
        ),
        migrations.AddField(
            model_name="comment",
            name="lesson",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="comments", to="courses.lesson"
            ),
        ),
        migrations.AddConstraint(
            model_name="product",
            constraint=models.UniqueConstraint(fields=("category", "name"), name="unique_product_name_per_category"),
        ),
        migrations.AddConstraint(
            model_name="course",
            constraint=models.UniqueConstraint(fields=("product", "name"), name="unique_course_name_per_product"),
        ),
    ]
